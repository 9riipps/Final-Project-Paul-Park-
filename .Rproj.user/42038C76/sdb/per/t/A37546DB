{
    "contents" : "# =====================================================\n# Stat133: Final Project\n# Description: Data processing\n# =====================================================\n\n# Name: Paul Park\n# SID : 23046317\n\n# =====================================================\n# Preprocessing of data to construct a new data frame \"storms.csv\"\n# =====================================================\n\n# call the package \"stringr\"\nlibrary(\"stringr\")\nlibrary(\"dplyr\")\n\n# call the rawdata by using one of the read.table functions\nraw <- read.csv(\"rawdata/rawdata.hdat\", sep = \"\", header = FALSE)\n\n# extract those rows that are in \"header\" format from \"raw\"\nfile1 <- raw[grep(\"SNBR\", (raw$V5:raw$V6)),]\n\n# get id's\nid <- 1:nrow(file1)\n\n# get dates\ndate <- file1$V2 # I won't run as.Date now since the plot you have on the instruction slides have character values under date column\n\n# get days\nmerged <- paste(file1[, 3], file1[, 4])\ndays <- as.numeric(gsub(\"M=\", \"\", str_extract(merged, \"M=[[:space:]]?\\\\d?\\\\d?\\\\d\")))\n\n# get names\nraw1_2 <- readLines(\"rawdata/rawdata.hdat\")\nname <- substr(raw1_2[grep(\"SNBR\", raw1_2)], 36, 47)\nname <- gsub(\"\\\\s\", \"\", name)\n\n# combine all these columns into a data.frame and save it as \"storms.csv\"\ndata1 <- data_frame(id, date, days, name)\nwrite.csv(data1, \"data/storms.csv\", row.names = FALSE)\n\n# =====================================================\n# Preprocessing to construct a new data frame \"tracks.csv\"\n# =====================================================\n\nraw1_3 <- read.csv(\"rawdata/rawdata.hdat\", header = FALSE)\n\n# get id counts\nidcount <- as.numeric(gsub(\"M=\", \"\", str_extract(raw1_3[,1], \"M=\\\\s?\\\\d?\\\\d?\\\\d\")))\nidcount <- na.omit(idcount)\nidcount <- as.numeric(idcount)\n\n# get id\nid2 <- rep(id, times = idcount*4)\n\n# get dates\ndate2 <- str_extract(raw1_3[, 1], \"\\\\d\\\\d/\\\\d\\\\d(/\\\\d\\\\d\\\\d\\\\d)?\")\n\n# get rid of the rows that are in \"trailer\" format\ndate2 <- na.omit(date2)\ndate2 <- as.character(date2)\n\nindices_date <- grep(\"/\\\\d\\\\d\\\\d\\\\d\", date2) # these indices represent those rows that are in \"header\" format\n\nfdate <- character(0)\nfor (i in 1:(length(indices_date) - 1)) {\n  fdate <- c(fdate, paste((date2[(indices_date[i] + 1):(indices_date[i + 1] - 1)]),\n                          gsub(\"\\\\d\\\\d/\\\\d\\\\d\", \"\", date2[indices_date[i]]), sep =\"\"))\n}\n\nfdate <- c(fdate, paste((date2[(tail(indices_date, 1) + 1):length(date2)]),\n                        gsub(\"\\\\d\\\\d/\\\\d\\\\d\", \"\", date2[tail(indices_date, 1)]), sep = \"\"))\n\ndate2 <- fdate\n\ngrep(\"01/01\", date2)\ngrep(\"12/31\", date2) # note that in two occasions, storms lasted two consecutive years.\ndate2[6192:6197] <- gsub(\"1954\", \"1955\", date2[6192:6197])\ndate2[11842:11848] <- gsub(\"2005\", \"2006\", date2[11842:11848])\n\ndate2 <- rep(date2, each = 4) # Again I won't run as.Date now since the plot you have on the instruction slides have character values under date column\n\n# get periods\nperiod2 <- character(0)\n\nfor (i in 1:length(idcount)) {\n  period2 <- c(period2, rep(c('00h', '06h', '12h', '18h'), times = idcount[i]))\n}\n\n# get stages\nstage2 <- str_extract_all(gsub(\"\\\\*$\", \"\", raw1_2), \"([[:digit:]][*SWEL][[:digit:]]?)\")\nstage2 <- unlist(stage2)\nstage2 <- gsub(\"[[:digit:]]\", \"\", stage2)\nstage2 <- gsub(\"\\\\*\", \"cyclone\", stage2)\nstage2 <- gsub(\"S\", \"subtropical\", stage2)\nstage2 <- gsub(\"E\", \"extratropical\", stage2)\nstage2 <- gsub(\"W\", \"wave\", stage2)\nstage2 <- gsub(\"L\", \"remanent low\", stage2)\n\n# get latitudes\nlatitude2 <- str_extract_all(raw1_2, \"(\\\\d[*SEWL](\\\\d|\\\\s)(\\\\d|\\\\s)\\\\d(\\\\d|\\\\s)(\\\\d|\\\\s)(\\\\d|\\\\s)\\\\d)\")\nlatitude2 <- unlist(latitude2)\nlatitude2 <- gsub(\"\\\\d[*SEWL]\", \"\", latitude2)\n\n# =====================================================\n# meanwhile save the indices wih all zero values so we can subset them out later\nindices_all_zero <- grep(\"0000000\", latitude2)\nindices_all_zero2 <- grep(\"0   0\", latitude2)\nindices_final <- c(indices_all_zero, indices_all_zero2)\n# =====================================================\n\nlatitude2 <- substr(latitude2, 1, 3)\nlatitude2 <- as.numeric(latitude2) / 10\n\n# get longitudes\nlongitude2 <- str_extract_all(raw1_2, \"(\\\\d[*SEWL](\\\\d|\\\\s)(\\\\d|\\\\s)\\\\d(\\\\d|\\\\s)(\\\\d|\\\\s)(\\\\d|\\\\s)\\\\d)\")\nlongitude2 <- unlist(longitude2)\nlongitude2 <- gsub(\"(\\\\d)[*SEWL]\", \"\", longitude2)\nlongitude2 <- substr(longitude2, 4, 7)\nlongitude2 <- as.numeric(longitude2) / 10\nlongitude2[which(longitude2 > 180)] <- longitude2[which(longitude2 > 180)] - 360\n\n# get wind speeds\n\nwind2 <- str_extract_all(raw1_2[-grep(\"SNBR|SRC\", raw1_2)], \"[*SEWL].{11}\")\nwind2 <- unlist(wind2)\nwind2 <- gsub(\"[*SEWL].{7}\", \"\", wind2)\nwind2 <- as.numeric(wind2)\n\n# get pressures\n\npress2 <- str_extract_all(raw1_2[-grep(\"SNBR\", raw1_2)], \"( \\\\d?\\\\d?\\\\d?\\\\d[*SEWL])\")\npress2 <- unlist(press2)\npress2 <- gsub(\"[*SEWL]\", \"\", press2)\npress2 <- as.numeric(press2)\n\n# combine all these columns into a data.frame and save it as \"tracks.csv\"\ndata2 <- data_frame(id2, date2, period2, stage2, latitude2, longitude2, wind2, press2)\ncolnames(data2) <- c(\"id\", \"date\", \"period\", \"stage\", \"lat\", \"long\", \"wind\", \"press\")\n\ndata2 <- data2[-indices_final, ]\n\nwrite.csv(data2, \"data/tracks.csv\", row.names = FALSE)",
    "created" : 1439588980792.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3291625067",
    "id" : "A37546DB",
    "lastKnownWriteTime" : 1439588913,
    "path" : "~/Desktop/Summer 2015/STAT 133/Final Project(Paul Park)/code/data_processing.R",
    "project_path" : "code/data_processing.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}